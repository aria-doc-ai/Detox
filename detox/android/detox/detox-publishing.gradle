apply plugin: 'maven-publish'
apply plugin: 'kotlin-android'
apply plugin: 'org.jetbrains.dokka'

// The official javadoc equivalent that supports kotlin KDoc (see https://github.com/Kotlin/dokka)
dokka {

    // Note: this only remains valid as long as we didn't move kotlin code to src/main/kotlin instead fo src/main/java.
    // Will have to keep this up to date if we decided to do so.
    sourceDirs = files(android.sourceSets.main.java.srcDirs)

    // Nothing to add to what kotlinTasks() resolves on its own
    classpath = []
//    classpath += files(android.bootClasspath)
//    classpath += files(project.configurations.getByName('compile').asList())
//    classpath += files(android.libraryVariants.collect { variant ->
//        variant.javaCompile.classpath.files
//    }.flatten())

    reportUndocumented = false
    skipEmptyPackages = true

    outputFormat = 'javadoc' // https://github.com/Kotlin/dokka#output-formats
    outputDirectory = "$buildDir/dokkaDoc" // Temp 'exploded' dir for .jar creation (i.e. by dokkaDocJar task)

    def suppressedPackages = ["androidx", "android_libs"]
    for (String packagePrefix: suppressedPackages) {
        packageOptions {
            prefix = packagePrefix
            suppress = true
        }
    }

    // Side note / TODO:
    // Dokka outputs R and BuildConfig; currently, there's nothing to do about it, as issues such as
    // this on - https://github.com/Kotlin/dokka/issues/419 are still open :-/
    // We might want to revisit this in the future -- see if they've decided to export a custom classes
    // suppression config var or something.
}

task dokkaDocJar(type: Jar, dependsOn: dokka) {
    from "$buildDir/dokkaDoc"
    classifier = 'javadoc'
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

project.afterEvaluate {
    project.tasks.all { task ->
        android.libraryVariants.all { variant ->
            def v = variant.name.capitalize()
            if (task.name == "publishMaven${v}AarPublicationToMavenRepository") {
                task.dependsOn "assemble${v}"
            }
        }
    }
}

publishing {
    repositories {
        maven {
            url = "$buildDir/../../../DetoxAndroid"
        }
    }

    publications {
        android.libraryVariants.all { variant ->
            if (variant.buildType.name == 'release') {
                println "Publishing variant '$variant.name' to: $buildDir/../../../DetoxAndroid"

                "maven${variant.name.capitalize()}Aar"(MavenPublication) {
                    variant.outputs.forEach { output ->
                        artifact output.outputFile
                    }
                    artifact sourcesJar
                    artifact dokkaDocJar
                    groupId 'com.wix'
                    artifactId 'detox'
                    version "${project.findProperty('VERSION') ?: '0.0.0'}-${variant.name}"
                }
            }
        }
    }
}
